const fs = require('fs-extra');
const path = require('path');
const basepath = path.resolve(__dirname, './../packages/');

var Components = require('./../components.json');

const superTheme = "theme-chalk";


function fileExists(filePath) {
    try {
        return fs.statSync(filePath).isFile();
    } catch (err) {
        return false;
    }
}

const themes = ['theme'];
Components = Object.keys(Components.ui);

console.time();
//根据组件列表，生成对应的scss的index.scss 列表页面
themes.forEach((theme) => {
    //拷贝主题模板
    fs.ensureDirSync(path.join(basepath, theme + "/super"));
    fs.copySync(path.join(basepath, superTheme + "/src"), path.join(basepath, theme + "/super"));
    fs.removeSync(path.join(basepath, theme + "/super/index.scss"));

    const isSCSS = theme !== 'theme-default';

    let indexContent = isSCSS ? '@import "./base.scss";\n@import "./../../theme-chalk/src/index.scss";\n' : '@import "./base.css";\n@import "./../../theme-chalk/src/index.css";\n';
    Components.forEach(function(key) {
        if (['icon', 'option', 'option-group'].indexOf(key) > -1) return;
        const fileName = key + (isSCSS ? '.scss' : '.css');
        indexContent += '@import "./' + fileName + '";\n';
        const filePath = path.resolve(basepath, theme, 'src', fileName);
        if (!fileExists(filePath)) {
            fs.writeFileSync(filePath, '', 'utf8');
            console.log(theme, ' 创建遗漏的 ', fileName, ' 文件');
        }
    });

    console.log(indexContent);
    fs.writeFileSync(path.resolve(basepath, theme, "src", isSCSS ? 'index.scss' : 'index.css'), "/* Automatically generated by './build/cssfile.js' */\n" + indexContent);
});
console.timeLog();

console.log('deploying...');
const process = require("child_process");
process.exec("gulp build --gulpfile packages/theme/gulpfile.js", (error, stdout, stderr) => {
    if (error) {
        console.log("error:" + error);
    }

    themes.forEach((theme) => {
        fs.ensureDirSync(path.join(__dirname, './../lib/css'));
        fs.copySync(path.join(basepath, theme + "/css"), path.join(__dirname, './../lib/css'));
        fs.removeSync(path.join(basepath, theme + "/super"));
        fs.removeSync(path.join(basepath, theme + "/css"));

        console.log('deployed!');
        console.timeEnd();
    });
});